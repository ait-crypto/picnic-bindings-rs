name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-shared:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
    name: Test (${{matrix.toolchain}} toolchain) with shared library
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.toolchain}}
          override: true
      - name: Install dependencies
        run: |
          sudo add-apt-repository -u -y ppa:s-ramacher/picnic
          sudo apt install libpicnic-dev pkg-config
      - name: Test with default features
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Test with all features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  test-static:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    name: Test (${{matrix.toolchain}} toolchain) with static library on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.toolchain}}
          override: true
      - name: Test with default features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --feature default,static-fallback
      - name: Test with all features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings